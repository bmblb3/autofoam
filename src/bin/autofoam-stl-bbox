use std::{env, fs::File, io::BufReader};
use stl_io::read_stl;

fn main() {
    let args: Vec<String> = env::args().skip(1).collect();

    if args.is_empty() {
        eprintln!("Usage: autofoamGetSTLBBox <file1.stl> [file2.stl] ...");
        std::process::exit(1);
    }

    for path in args {
        match File::open(&path)
            .map(BufReader::new)
            .and_then(|mut reader| read_stl(&mut reader))
        {
            Ok(stl) => {
                let mut min = [f32::INFINITY; 3];
                let mut max = [f32::NEG_INFINITY; 3];

                for vertex in &stl.vertices {
                    for i in 0..3 {
                        if vertex[i] < min[i] {
                            min[i] = vertex[i];
                        }
                        if vertex[i] > max[i] {
                            max[i] = vertex[i];
                        }
                    }
                }

                println!(
                    "{:.6} {:.6} {:.6} {:.6} {:.6} {:.6}",
                    min[0], min[1], min[2], max[0], max[1], max[2]
                );
            }
            Err(e) => {
                eprintln!("Error reading {}: {}", path, e);
            }
        }
    }
}
